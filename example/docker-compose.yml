# Example docker-compose file with several connected links

version: "3"

services:
  webapp1:
    container_name: webapp1
    image: nginx:latest
    networks:
      - frontend
      - backend
      - all
      - dcdc_internet_network
    labels:
      - "global-ignore=all"
      - "add-preset=default"
      - "group=frontend"
      - "default=true"
      - "protocol=http"
      - "path=/"
    ports:
      - "127.0.0.1:8081:80/tcp"
    restart: always
    cap_drop:
      - NET_RAW

  owncontainer:
    container_name: owncontainer
    image: grebtsew/own
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - frontend
      - all
    labels:
      - "default=true"
    restart: always

  webapp2:
    container_name: webapp2
    image: nginx:latest
    networks:
      - frontend
      - backend
      - all
    labels:
      - "add-preset=other"
      - "other=true"
      - "group=frontend"
    ports:
      - "8082:80"
    restart: always

  database1:
    container_name: database1
    image: postgres
    labels:
      - "group=database"
      - "default=true"
    networks:
      - backend
      - database
      - all
    environment:
      POSTGRES_DB: mydb1
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: password1
    restart: always

  database2:
    container_name: database2
    image: postgres
    labels:
      - "group=database"
    networks:
      - backend
      - database
      - all
    environment:
      POSTGRES_DB: mydb2
      POSTGRES_USER: user2
      POSTGRES_PASSWORD: password2
    restart: always

  worker1:
    container_name: worker1
    image: busybox
    labels:
      - "group=worker"
      - "default=true"
    networks:
      - backend
      - worker
      - all
    command: sleep 3600
    restart: always

  worker2:
    container_name: worker2
    image: busybox
    labels:
      - "group=worker"
    networks:
      - backend
      - worker
      - all
    command: sleep 3600
    restart: always

  monitoring:
    container_name: monitoring
    image: prom/prometheus
    labels:
      - "group=monitoring"
      - "other=true"
      - '[{"container": "custom","networks": ["frontend"], "labels": ["default=true","controllable=false"], "ports": ["9090:9090"]}]'
    networks:
      - frontend
      - backend
      - monitoring
      - logging
      - cache
      - all
    restart: always

  logging:
    labels:
      - "group=monitoring"
      - "network=all"
      - "network=backend"
      - "network=logging"
      - "other=true"
    container_name: logging
    image: fluentd
    network_mode: "host"
    restart: always

  cache:
    container_name: cache
    image: redis
    ports:
      - "6379:6379/tcp"
    networks:
      - backend
      - cache
      - all
    restart: always

networks:
  frontend:
    name: frontend
    driver: bridge
    internal: true
  backend:
    internal: true
  database:
    internal: true
  worker:
    internal: true
  monitoring:
    internal: true
  logging:
    internal: true
  cache:
  all:
    driver: bridge
    internal: true
  dcdc_internet_network:
    name: dcdc_internet_network
    driver: bridge
    internal: false
